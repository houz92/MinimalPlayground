<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <InvariantGlobalization>true</InvariantGlobalization>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.Filters" Version="8.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.5.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.5.0" />
    <PackageReference Include="NSwag.MSBuild" Version="14.0.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

<!--  <PropertyGroup>-->
<!--    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>-->
<!--  </PropertyGroup>-->

<!--  &lt;!&ndash; Generate openapi.json on build; see https://github.com/domaindrivendev/Swashbuckle.AspNetCore#using-the-tool-with-the-net-core-30-sdk-or-later &ndash;&gt;-->
<!--  <Target Name="OpenAPI" AfterTargets="Build" Condition=" '$(Configuration)' == 'Debug' ">-->
<!--    <Exec Command="dotnet swagger tofile &#45;&#45;output openapi.json $(TargetPath) v1" WorkingDirectory="$(TargetDir)" />-->
<!--  </Target>-->

<!--  &lt;!&ndash; Generate the REST API client class and put it in MinimalPlayground.Client project folder &ndash;&gt;-->
<!--  <Target Name="GenerateWeatherClient" AfterTargets="OpenAPI" Inputs="$(TargetDir)openapi.json" Outputs="$(ProjectDir)\WeatherClient.cs">-->
<!--    <Exec Command="$(NSwagExe_Net60) openapi2csclient /input:$(TargetDir)openapi.json  /classname:WeatherClient /namespace:MinimalPlayground /output:$(SolutionDir)\src\MinimalPlayground.Client\WeatherClient.cs" ConsoleToMSBuild="true">-->
<!--      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />-->
<!--    </Exec>-->
<!--  </Target>-->
</Project>
